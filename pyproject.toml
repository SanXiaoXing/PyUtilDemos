[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "py-util-demos"
version = "0.1.0"
description = "基于Python和PyQt5的实用工具集合，包含多个功能模块如日志查看器、数据监控、校准工具等"
readme = "README.md"
requires-python = ">=3.8.10"
authors = [
    {name = "SanXiaoXing", email = "sanxiaoxing@qq.com"},
    {name = "JIN"}
]
keywords = [
    "pyqt5",
    "gui",
    "tools",
    "utilities",
    "monitoring",
    "calibration",
    "data-analysis",
    "logging",
    "visualization"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Visualization",
    "Topic :: System :: Monitoring",
    "Topic :: Utilities"
]
dependencies = [
    "PyQt5>=5.15.0",
    "numpy>=1.20.0",
    "matplotlib>=3.5.0",
    "pyqtgraph>=0.12.0",
    "pandas>=1.3.0",
    "openpyxl>=3.0.0",
    "h5py>=3.0.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-qt>=4.0.0",
    "black>=22.0",
    "flake8>=4.0",
    "mypy>=0.900",
    "pre-commit>=2.15.0"
]
docs = [
    "sphinx>=4.0",
    "sphinx-rtd-theme>=1.0",
    "myst-parser>=0.15.0"
]
test = [
    "pytest>=6.0",
    "pytest-qt>=4.0.0",
    "pytest-cov>=3.0.0"
]

[project.urls]
Homepage = "https://gitee.com/jjycode/py-util-demos"
Repository = "https://gitee.com/jjycode/py-util-demos.git"
Documentation = "https://gitee.com/jjycode/py-util-demos/blob/main/README.md"
"Bug Tracker" = "https://github.com/SanXiaoXing/py-util-demos/issues"

[project.scripts]
py-util-demos = "main:main"
calib-tool = "CalibTool.calib_tool_demo:main"
log-viewer = "LogViewer.log_viewer_demo:main"
rt-data-plot = "RTDataPlot.RTdata_plot_demo:main"
bulb-monitor = "BulbStateMonitor.bulb_statemonitor_demo:main"
data-replay = "DataReplay.data_replay_demo:main"
bus-monitor = "BusDataMonitor.gpt_demo:main"
resource-query = "ResourceQuery.ResourceQueryTool:main"
custom-widgets = "CustomWidgets.gallary:main"

[project.gui-scripts]
py-util-demos-gui = "main:main"

[tool.setuptools]
packages = [
    "BulbStateMonitor",
    "BusDataMonitor", 
    "CalibTool",
    "CustomWidgets",
    "CustomWidgets.components",
    "DataReplay",
    "LogViewer",
    "RTDataPlot",
    "ResourceQuery",
    "assets",
    "components",
    "resource"
]

[tool.setuptools.package-data]
"*" = ["*.ui", "*.qss", "*.json", "*.xlsx", "*.csv", "*.h5"]
"assets" = ["icon/*.svg", "icon/*.png", "icon/*.ico"]
"resource" = [
    "icon/*.ico",
    "image/*.png", 
    "qss/*.qss",
    "qss/*.py"
]

[tool.setuptools.exclude-package-data]
"*" = ["*.pyc", "__pycache__", "*.log", "logs/*"]

# ==================== 开发工具配置 ====================

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
# A regex preceded by ^/ will apply only to files and directories
# in the root of the project.
^/resource/  # exclude resource directory
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "*.egg-info",
    "resource"
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "PyQt5.*",
    "pyqtgraph.*",
    "matplotlib.*",
    "h5py.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py"
]
python_classes = [
    "Test*"
]
python_functions = [
    "test_*"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "gui: marks tests that require GUI"
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning"
]

[tool.coverage.run]
source = ["."] 
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*_test.py",
    "setup.py",
    "resource/*",
    "assets/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*Protocol\\):",
    "@(abc\\.)?abstractmethod"
]

# ==================== 项目特定配置 ====================

[tool.py-util-demos]
# 项目特定的配置选项
default_log_level = "INFO"
default_data_dir = "data"
default_config_dir = "config"
max_log_files = 30
auto_cleanup_logs = true

[tool.py-util-demos.modules]
# 各模块的特定配置
[tool.py-util-demos.modules.BulbStateMonitor]
default_config = "conf.xlsx"
max_devices = 100
refresh_interval = 100  # ms

[tool.py-util-demos.modules.BusDataMonitor]
default_protocol = "protocol.json"
max_channels = 16
data_buffer_size = 10000
flush_interval = 5  # seconds

[tool.py-util-demos.modules.CalibTool]
default_config = "calibconf.json"
max_calibration_points = 50

[tool.py-util-demos.modules.LogViewer]
max_log_files = 100
log_retention_days = 30
default_log_dir = "logs"

[tool.py-util-demos.modules.RTDataPlot]
max_data_points = 10000
default_refresh_rate = 50  # ms
default_save_format = "csv"

[tool.py-util-demos.modules.DataReplay]
supported_formats = ["csv", "xlsx", "h5"]
max_file_size = "100MB"
default_time_column = "timestamp"

[tool.py-util-demos.modules.ResourceQuery]
max_query_results = 1000
cache_timeout = 300  # seconds

[tool.py-util-demos.ui]
# UI相关配置
default_theme = "default"
window_icon = "assets/icon/fill-shit-ac.svg"
default_font_family = "微软雅黑"
default_font_size = 10

[tool.py-util-demos.performance]
# 性能相关配置
enable_caching = true
max_cache_size = "100MB"
thread_pool_size = 4
max_concurrent_operations = 10

[tool.py-util-demos.security]
# 安全相关配置
enable_input_validation = true
max_file_upload_size = "50MB"
allowed_file_extensions = [".csv", ".xlsx", ".json", ".h5", ".log"]

# ==================== 构建和发布配置 ====================

[tool.setuptools_scm]
write_to = "_version.py"
version_scheme = "post-release"
local_scheme = "dirty-tag"

[tool.wheel]
universal = false

[tool.bdist_wheel]
universal = false

# ==================== 环境和部署配置 ====================

[tool.py-util-demos.deployment]
# 部署相关配置
supported_platforms = ["windows", "linux", "macos"]
min_python_version = "3.8"
max_python_version = "3.12"
required_system_packages = []

[tool.py-util-demos.packaging]
# 打包相关配置
include_examples = true
include_docs = true
compress_assets = false
create_desktop_shortcuts = true

[tool.py-util-demos.installation]
# 安装相关配置
post_install_script = "scripts/post_install.py"
pre_uninstall_script = "scripts/pre_uninstall.py"
create_start_menu_entry = true
associate_file_types = [".pyutil"]


# Git-cliff 配置（变更日志生成）
[tool.git-cliff.changelog]
header = """
# Changelog

All notable changes to this project will be documented in this file.
"""
body = """
{% set_global current_date = "" %}
{% for commit in commits %}
{% set commit_date = commit.author.timestamp | date(format="%Y-%m-%d") %}
{% if commit_date != current_date %}
{% set_global current_date = commit_date %}
## {{ commit_date }}
{% endif %}
### {{ commit.group | striptags | trim | upper_first }}
- {% if commit.scope %}*({{ commit.scope }})* {% endif %}{{ commit.message | upper_first }} by [@{{ commit.author.name }}](mailto:{{ commit.author.email }}) ([`{{ commit.id | truncate(length=7, end="") }}`](https://gitee.com/jjycode/py-util-demos/commit/{{ commit.id }}))
{% endfor %}
"""
trim = true
footer = """
<!-- Generated by SanXiaoXing, via git-cliff, Command is git cliff -o CHANGELOG.md-->
"""


[tool.git-cliff.git]
conventional_commits = true
filter_unconventional = true
split_commits = false
commit_parsers = [
    { message = "^feat", group = "🚀 Features" },
    { message = "^fix", group = "🐛 Bug Fixes" },
    { message = "^doc", group = "📚 Documentation" },
    { message = "^perf", group = "⚡ Performance" },
    { message = "^refactor", group = "♻️ Refactor" },
    { message = "^style", group = "🎨 Styling" },
    { message = "^test", group = "🧪 Testing" },
    { message = "^chore\\(release\\): prepare for", skip = true },
    { message = "^chore\\(deps.*\\)", skip = true },
    { message = "^chore|^ci", group = "⚙️ Miscellaneous Tasks" },
    { body = ".*security", group = "🛡️ Security" },
    { message = "^revert", group = "◀️ Revert" }
]
protect_breaking_commits = false
filter_commits = false
tag_pattern = "v[0-9]*"
skip_tags = "v0.1.0-beta.1"
ignore_tags = ""
topo_order = false
sort_commits = "newest"